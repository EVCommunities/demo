charset utf-8;

server
{
    listen 443 ssl http2;
    server_name ;

    ssl_certificate /run/secrets/certificate;
    ssl_certificate_key /run/secrets/private_key;
    ssl_session_timeout 20m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA;
    ssl_session_cache shared:SSL:50m;
    ssl_dhparam /run/secrets/dhparams;
    ssl_prefer_server_ciphers on;

    root /;

    location = /favicon.ico
    {
        root /etc/nginx/html;
        try_files /favicon.ico =404;
    }

    location /logreader/
    {
        proxy_cache_valid any 10s;
        proxy_pass http://host.docker.internal:/;
    }

    location /mongoexpress/
    {
        proxy_no_cache $http_host;
        proxy_pass http://host.docker.internal:/mongoexpress/;
    }

    location /rabbitmq/
    {
        proxy_no_cache $http_host;
        proxy_pass http://host.docker.internal:/rabbitmq/;
    }

    location = /starter/docs
    {
        auth_basic "Private location";
        auth_basic_user_file /run/secrets/etc_pass_file;

        if ($request_method != 'GET') {
            return 401 '$request_method not allowed for $host/starter/docs';
        }

        proxy_pass http://host.docker.internal:/starter/docs;
    }

    location /starter/docs/
    {
        auth_basic "Private location";
        auth_basic_user_file /run/secrets/etc_pass_file;

        if ($request_method != 'GET') {
            return 401 '$request_method not allowed for $host/starter/docs';
        }

        proxy_pass http://host.docker.internal:/starter/docs/;
    }

    location = /starter/
    {
        if ($request_method != 'POST') {
            return 401 '$request_method not allowed for $host/starter/';
        }

        proxy_no_cache $http_host;
        proxy_pass http://host.docker.internal:/starter/;
    }

    location /demo/backend/
    {
        proxy_no_cache $http_host;
        proxy_pass http://host.docker.internal:/;
    }

    location /
    {
        auth_basic "Private location";
        auth_basic_user_file /run/secrets/etc_pass_file;

        proxy_no_cache $http_host;
        proxy_pass http://host.docker.internal:/;
    }
}

server
{
    listen 80;
    server_name ;

    location /
    {
        rewrite ^(.*) https://$1 permanent;
    }
}
